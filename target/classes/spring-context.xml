<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd"
>
    <!--加载配置文件-->
    <context:property-placeholder ignore-unresolvable="true"
                                  location="classpath:jeesite.properties"/>
    <!--种加载方式可以在代码中通过@Value注解进行注入,
    可以将配置整体赋给Properties类型的类变量，也可以取出其中的一项赋值给String类型的类变量
    如@Value("#{APP_PROP}) 或者@Value("#APP_PROP['jdbc.driver']")-->
    <util:properties id="APP_PROP" location="classpath:jeesite.properties"/>

    <!--使用Annotation自动注册Bean，再主容器中不扫描@Controller注解，再SpringMVC中只扫描@Controller注解-->
    <context:component-scan base-package="com.amysue.learn.jeesite">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--配置JSR303 Bean Validator-->
    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
    </bean>

    <!--数据源配置，使用Druid配置-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!--基本属性 url, user, password-->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--配置初始化大小，最大，最小-->
        <property name="initialSize" value="${jdbc.pool.init}"/>
        <property name="minIdle" value="${jdbc.pool.minIdle}"/>
        <property name="maxActive" value="${jdbc.pool.maxActive}"/>

        <!--配置获取连接等待超时的时间，单位毫秒-->
        <property name="maxWait" value="60000"/>
        <!--配置间隔多久才进行一次检测，检测需要关闭的空白连接，单位是毫秒-->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!--配置一个连接在池中最小生存时间，单位是毫秒-->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="${jdbc.pool.validationQuery}"/>
        <!--配置监控统计拦截的filters-->
        <property name="filters" value="stat"/>
    </bean>

    <!--Mybatis begin-->
    <!--定义事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--配置Annotation驱动，扫描@Transactional注解的类定义事务-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.amysue.learn.jeesite"/>
        <property name="mapperLocations" value="classpath:mappings/**/*.xml"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.amysue.learn.jeesite"/>
        <!--当指定了annotationClass的时候，MapperScannerConfigurer将只注册使用了annotationClass注解标记的接口-->
        <property name="annotationClass" value="com.amysue.learn.jeesite.common.persistence.annotation.MyBatisDao"/>
    </bean>
    <!--Mybatis end-->
</beans>
